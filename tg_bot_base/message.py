from abc import ABC, abstractmethod
from typing import Any, TYPE_CHECKING, Callable
if TYPE_CHECKING:
    from tg_bot_base import BotManager

class Message(ABC):
    def __init__(self): ...

    @abstractmethod
    async def send(self, bot_manager: "BotManager", user_id: int): ...
    
    @abstractmethod
    async def edit(self, user_id: int): ...
    
    @abstractmethod
    async def delete(self, user_id: int): ...
    
    @abstractmethod
    def __eq__(self, other: "Message"): ...
    
    @abstractmethod
    def clone(self): ...



class AudioMessage(Message): ...

class DocumentMessage(Message): ...

class SimpleMessage(Message): ...

class PhotoMessage(Message): ...

class VideoMessage(Message): ...
    
